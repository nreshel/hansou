[{"/Users/rodeshel/Desktop/hansou/src/index.js":"1","/Users/rodeshel/Desktop/hansou/src/reportWebVitals.js":"2","/Users/rodeshel/Desktop/hansou/src/App.js":"3","/Users/rodeshel/Desktop/hansou/src/context/GlobalState.js":"4","/Users/rodeshel/Desktop/hansou/src/component/NavBar.js":"5","/Users/rodeshel/Desktop/hansou/src/component/FlashCardList.js":"6","/Users/rodeshel/Desktop/hansou/src/component/AddFlashCard.js":"7","/Users/rodeshel/Desktop/hansou/src/component/FlashCard.js":"8","/Users/rodeshel/Desktop/hansou/src/db/Firebase.js":"9","/Users/rodeshel/Desktop/hansou/src/hooks/useFetch.js":"10","/Users/rodeshel/Desktop/hansou/src/component/SearchFlashCards.js":"11","/Users/rodeshel/Desktop/hansou/src/component/DictionarySearch.js":"12"},{"size":500,"mtime":1608951751642,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1608951751642,"results":"15","hashOfConfig":"14"},{"size":1035,"mtime":1609186782565,"results":"16","hashOfConfig":"14"},{"size":440,"mtime":1609013329216,"results":"17","hashOfConfig":"14"},{"size":3164,"mtime":1609197270673,"results":"18","hashOfConfig":"14"},{"size":3283,"mtime":1609218592670,"results":"19","hashOfConfig":"14"},{"size":2804,"mtime":1609186035692,"results":"20","hashOfConfig":"14"},{"size":2269,"mtime":1609194893055,"results":"21","hashOfConfig":"14"},{"size":521,"mtime":1608954774015,"results":"22","hashOfConfig":"14"},{"size":1938,"mtime":1609218737886,"results":"23","hashOfConfig":"14"},{"size":3608,"mtime":1609216493325,"results":"24","hashOfConfig":"14"},{"size":3277,"mtime":1609189409462,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"ua42bd",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},"/Users/rodeshel/Desktop/hansou/src/index.js",[],["56","57"],"/Users/rodeshel/Desktop/hansou/src/reportWebVitals.js",[],"/Users/rodeshel/Desktop/hansou/src/App.js",["58","59","60"],"import React, { useContext } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { GlobalContext, GlobalProvider } from './context/GlobalState';\nimport NavBar from './component/NavBar'\nimport FlashCardList from './component/FlashCardList'\nimport AddFlashCard from './component/AddFlashCard'\nimport SearchFlashCards from './component/SearchFlashCards'\nimport DictionarySearch from './component/DictionarySearch'\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Router>\n        <NavBar />\n        <Switch>\n          <Route exact path=\"/\" render={(...props) => <FlashCardList />} />\n          <Route exact path=\"/add-card\" render={(...props) => <AddFlashCard />} />\n          <Route exact path=\"/search-card\" render={(...props) => <SearchFlashCards />} />\n          <Route exact path=\"/dictionary-search\" render={(...props) => <DictionarySearch />} />\n        </Switch>\n      </Router>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","/Users/rodeshel/Desktop/hansou/src/context/GlobalState.js",["61"],"import React, { createContext, useState } from 'react'\nimport { app } from '../db/Firebase'\n\nconst initialState = {\n  cards: [],\n  cardsDone: [],\n  card: {},\n  index: 0\n}\n\nexport const GlobalContext = createContext();\n\nexport const GlobalProvider = ({ children }) => {\n  const [state, setState] = useState(initialState);\n  return (\n    <GlobalContext.Provider value={{state, setState}}>\n      {children}\n    </GlobalContext.Provider>\n  );\n}","/Users/rodeshel/Desktop/hansou/src/component/NavBar.js",["62","63","64","65"],"/Users/rodeshel/Desktop/hansou/src/component/FlashCardList.js",["66","67","68","69","70","71","72"],"/Users/rodeshel/Desktop/hansou/src/component/AddFlashCard.js",["73","74","75"],"import React, { useState, useContext } from 'react';\nimport { GlobalContext, GlobalProvider } from '../context/GlobalState';\nimport { useLocation } from \"react-router-dom\";\nimport { GrRotateRight } from 'react-icons/gr';\nimport { app } from '../db/Firebase';\nimport '../css/AddCard.css';\nimport '../css/FlashCards.css';\nfunction AddFlashCard() {\n  const { state, setState } = useContext(GlobalContext);\n  const [card, setCard] = useState({\n    eng: '',\n    pin: '',\n    han: ''\n  })\n  const [flip, setFlip] = useState(false)\n  let location = useLocation();\n  console.log(state)\n\n  const onChange = (e) => {\n    setCard({\n      ...card,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  /**\n   * Submits inputted text boxes and makes it into a cards and adds it to the learning database\n   */\n  const onSubmit = (e) => {\n    e.preventDefault();\n    app.database().ref(`/users/CaIqDM8rMUgjpiqPEqGV1MzVN9S2/cards/`).push().set({eng: card.eng, pin: card.pin, han: card.han, done: 0});\n    setCard({\n      ...card, \n      eng: '',\n      pin: '',\n      han: ''\n    });\n  }\n\n  /**\n   * When chinese word is click converts text to speech output\n   */\n  const textToSpeech = (word) => {\n    if (!window.speechSynthesis) {\n      alert('Your browser doesn\\'t support text to speech.\\nTry Chrome 33+ :)');\n    } else {\n      const utterance = new SpeechSynthesisUtterance();\n\n      utterance.text = word;\n      utterance.lang = \"zh\";\n\n      speechSynthesis.speak(utterance);\n    }\n  }\n  return (\n    <div className=\"add-card-container\">\n      <div className=\"card-container\">\n        <div className={`card ${flip ? \"card-toggle\" : ''}`}>\n          <div className=\"front\">\n            <div className=\"rotation-btn\">\n              <GrRotateRight onClick={() => setFlip(!flip)} />\n            </div>\n            <div className=\"eng\">{card.eng}</div>\n          </div>\n          <div className=\"back\">\n            <div className=\"rotation-btn\">\n              <GrRotateRight onClick={() => setFlip(!flip)} />\n            </div>\n            <div className=\"han\" onClick={() => textToSpeech(card.han)}>{card.han}</div>\n            <div className=\"pin\">{card.pin}</div>\n          </div>\n        </div>\n      </div>\n      <div className=\"form-div\">\n        <form onSubmit={onSubmit}>\n          <input type=\"text\" name=\"eng\" autocomplete=\"off\" placeholder=\"input english...\" value={card.eng} onChange={onChange}/><br/>\n          <input type=\"text\" name=\"pin\" autocomplete=\"off\" placeholder=\"input pinyin...\" value={card.pin} onChange={onChange}/><br/>\n          <input type=\"text\" name=\"han\" autocomplete=\"off\" placeholder=\"input hanzi...\" value={card.han} onChange={onChange}/><br/>\n          <input type=\"submit\" value=\"submit\" className=\"btn\" />\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default AddFlashCard;\n","/Users/rodeshel/Desktop/hansou/src/component/FlashCard.js",["76"],"import React, { memo, useState, useContext } from 'react'\nimport { GlobalContext } from '../context/GlobalState'\nimport { ImArrowLeft2, ImArrowRight2 } from 'react-icons/im'\nimport { GrRotateRight } from 'react-icons/gr'\nimport '../css/Card.css'\n\nfunction FlashCard({ card, nextCard, prevCard, removeCard, cardLearned }) {\n  const { state, setState } = useContext(GlobalContext)\n  const [flip, setFlip] = useState(false)\n\n  /**\n   * When chinese word is click converts text to speech output\n   */\n  const textToSpeech = (word) => {\n    if (!window.speechSynthesis) {\n      alert('Your browser doesn\\'t support text to speech.\\nTry Chrome 33+ :)');\n    } else {\n      const utterance = new SpeechSynthesisUtterance();\n\n      utterance.text = word;\n      utterance.lang = \"zh\";\n\n      speechSynthesis.speak(utterance);\n    }\n  }\n  return (\n    <div>\n      <div style={{\"display\": \"inline-flex\", \"paddingRight\": \"1%\", \"color\": \"red\"}}>{card && Object.values(state.cards).length}</div>\n      <div style={{\"display\": \"inline-flex\", \"paddingLeft\": \"1%\", \"color\": \"blue\"}}>{card && Object.values(state.cardsDone).length}</div>\n      <div className=\"card-container\">\n        <div className={`card ${flip ? \"card-toggle\" : ''}`}>\n          <div className=\"front\">\n            <div className=\"rotation-btn\">\n              <GrRotateRight onClick={() => setFlip(!flip)} />\n            </div>\n            <button className=\"del\" onClick={() => removeCard(card)}>X</button>\n            <div className=\"eng\">{card && card.eng}</div>\n          </div>\n          <div className=\"back\">\n            <div className=\"rotation-btn\">\n              <GrRotateRight onClick={() => setFlip(!flip)} />\n            </div>\n            <button className=\"del\" onClick={() => removeCard(card)}>X</button>\n            <div className=\"han\" onClick={() => textToSpeech(card.han)} >{card && card.han}</div>\n            <div className=\"pin\">{card && card.pin}</div>\n          </div>\n        </div>\n        <ImArrowLeft2 className=\"left-arrow\" onClick={() => prevCard()} />\n        <ImArrowRight2 className=\"right-arrow\" onClick={() => nextCard()} />\n      </div>\n      <button onClick={() => cardLearned(card)} >Done</button>\n      <button>Forgot</button>\n    </div>\n  )\n}\n\nexport default memo(FlashCard);\n","/Users/rodeshel/Desktop/hansou/src/db/Firebase.js",[],"/Users/rodeshel/Desktop/hansou/src/hooks/useFetch.js",["77"],"/Users/rodeshel/Desktop/hansou/src/component/SearchFlashCards.js",[],"/Users/rodeshel/Desktop/hansou/src/component/DictionarySearch.js",["78","79","80"],"import React, { memo, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { app } from '../db/Firebase'\nimport { GoPlus } from 'react-icons/go'\nimport '../css/DictionarySearch.css'\n\nfunction DictionarySearch() {\n  const [searchValue, setSearchValue] = useState('')\n  const [searchedList, setSearchedList] = useState([])\n  const { state } = useLocation()\n  console.log(searchedList)\n\n  const getFilteredDictionary = (e) => {\n    let fetchCards = []\n    const keycode = (e.keyCode ? e.keyCode : e.which)\n    if(searchValue.match(/(\\p{Script=Hani})+/gu) && keycode === 13){\n      console.log('enter press here! ')\n      app.database().ref('/chinese-dictionary-simplified/').orderByKey().startAt(searchValue).endAt(searchValue +\"\\uf8ff\").once('value', (snapshot) => {\n        if(snapshot.exists()) {\n          Object.entries(snapshot.val()).forEach(([key, value]) => {\n            fetchCards.push({\n              id: key,\n              description: value.description,\n              jyut: value.jyutping,\n              pin: value.pinyin,\n              char: value.word\n            })\n          })\n          setSearchedList(fetchCards)\n        } else {\n          alert(\"This query does not match what's in the dictionary, please try again with a different query\")\n          setSearchValue('')\n        }\n      })\n    }\n  }\n  \n  /**\n   * adds cards to the flashcard deck\n   */\n  const addCard = (card) => {\n    app.database().ref(`/users/CaIqDM8rMUgjpiqPEqGV1MzVN9S2/cards/`).push().set(card);\n    alert(\"card has been added\")\n  }\n\n  /**\n   * When chinese word is click converts text to speech output\n   */\n  const textToSpeech = (word) => {\n    if (!window.speechSynthesis) {\n      alert('Your browser doesn\\'t support text to speech.\\nTry Chrome 33+ :)');\n    } else {\n      const utterance = new SpeechSynthesisUtterance();\n\n      utterance.text = word;\n      utterance.lang = \"zh\";\n\n      speechSynthesis.speak(utterance);\n    }\n  }\n  return (\n    <div className=\"intial-container\">\n      <input className=\"search-box\" name=\"search\" type=\"text\" placeholder=\"search card in chinese...\" value={searchValue} onChange={(e) => setSearchValue(e.target.value)} onKeyPress={(e) => getFilteredDictionary(e)} autocomplete=\"off\" />\n      <div className=\"dictionary-search-container\">\n        {searchValue.match(/(\\p{Script=Hani})+/gu) && searchedList && searchedList.length !== 0 ? searchedList.map(card => {\n          return (\n            <div className=\"dictionary-card-search-container\">\n              <div className=\"dictionary-search-card\">\n                <div className=\"add-card\" onClick={() => addCard({eng: card.description[0], pin: card.pin[0].replace(/[\\[\\]']+/g,''), han: card.id})} >\n                  <GoPlus />\n                </div>\n                <div className=\"eng-dictionary-search\">{card.description[0]}</div>\n                <div className=\"pin-dictionary-search\">{card.pin[0].replace(/[\\[\\]']+/g,'')}</div>\n                <div className=\"han-dictionary-search\" onClick={() => textToSpeech(card.id)} >{card.id}</div>\n              </div>\n            </div>\n          )\n        }) : (\n          <div className=\"initial-container\">Try to search for a word!</div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default memo(DictionarySearch)\n",{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":27},{"ruleId":"85","severity":1,"message":"89","line":3,"column":10,"nodeType":"87","messageId":"88","endLine":3,"endColumn":23},{"ruleId":"85","severity":1,"message":"90","line":9,"column":8,"nodeType":"87","messageId":"88","endLine":9,"endColumn":12},{"ruleId":"85","severity":1,"message":"91","line":2,"column":10,"nodeType":"87","messageId":"88","endLine":2,"endColumn":13},{"ruleId":"92","severity":1,"message":"93","line":22,"column":11,"nodeType":"94","endLine":31,"endColumn":15},{"ruleId":"92","severity":1,"message":"93","line":34,"column":11,"nodeType":"94","endLine":43,"endColumn":15},{"ruleId":"92","severity":1,"message":"93","line":46,"column":11,"nodeType":"94","endLine":55,"endColumn":15},{"ruleId":"92","severity":1,"message":"93","line":58,"column":11,"nodeType":"94","endLine":67,"endColumn":15},{"ruleId":"85","severity":1,"message":"95","line":1,"column":36,"nodeType":"87","messageId":"88","endLine":1,"endColumn":45},{"ruleId":"85","severity":1,"message":"96","line":2,"column":10,"nodeType":"87","messageId":"88","endLine":2,"endColumn":21},{"ruleId":"85","severity":1,"message":"97","line":3,"column":25,"nodeType":"87","messageId":"88","endLine":3,"endColumn":39},{"ruleId":"98","severity":1,"message":"99","line":26,"column":6,"nodeType":"100","endLine":26,"endColumn":41,"suggestions":"101"},{"ruleId":"98","severity":1,"message":"99","line":42,"column":6,"nodeType":"100","endLine":42,"endColumn":42,"suggestions":"102"},{"ruleId":"98","severity":1,"message":"103","line":48,"column":6,"nodeType":"100","endLine":48,"endColumn":44,"suggestions":"104"},{"ruleId":"98","severity":1,"message":"105","line":95,"column":5,"nodeType":"100","endLine":95,"endColumn":43,"suggestions":"106"},{"ruleId":"85","severity":1,"message":"97","line":2,"column":25,"nodeType":"87","messageId":"88","endLine":2,"endColumn":39},{"ruleId":"85","severity":1,"message":"107","line":9,"column":18,"nodeType":"87","messageId":"88","endLine":9,"endColumn":26},{"ruleId":"85","severity":1,"message":"108","line":16,"column":7,"nodeType":"87","messageId":"88","endLine":16,"endColumn":15},{"ruleId":"85","severity":1,"message":"107","line":8,"column":18,"nodeType":"87","messageId":"88","endLine":8,"endColumn":26},{"ruleId":"98","severity":1,"message":"109","line":61,"column":6,"nodeType":"100","endLine":61,"endColumn":8,"suggestions":"110"},{"ruleId":"85","severity":1,"message":"111","line":10,"column":11,"nodeType":"87","messageId":"88","endLine":10,"endColumn":16},{"ruleId":"112","severity":1,"message":"113","line":69,"column":120,"nodeType":"114","messageId":"115","endLine":69,"endColumn":121,"suggestions":"116"},{"ruleId":"112","severity":1,"message":"113","line":73,"column":79,"nodeType":"114","messageId":"115","endLine":73,"endColumn":80,"suggestions":"117"},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'GlobalContext' is defined but never used.","'logo' is defined but never used.","'app' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","'useLocation' is defined but never used.","'GlobalProvider' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'state'. Either include it or remove the dependency array.","ArrayExpression",["120"],["121"],"React Hook useCallback has a missing dependency: 'fetchCards'. Either include it or remove the dependency array.",["122"],"React Hook useCallback has missing dependencies: 'setState' and 'state'. Either include them or remove the dependency array.",["123"],"'setState' is assigned a value but never used.","'location' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setState' and 'state'. Either include them or remove the dependency array.",["124"],"'state' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["125","126"],["127","128"],"no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},{"desc":"129","fix":"131"},{"desc":"132","fix":"133"},{"desc":"129","fix":"134"},{"desc":"135","fix":"136"},{"messageId":"137","fix":"138","desc":"139"},{"messageId":"140","fix":"141","desc":"142"},{"messageId":"137","fix":"143","desc":"139"},{"messageId":"140","fix":"144","desc":"142"},"Update the dependencies array to be: [state, setState]",{"range":"145","text":"146"},{"range":"147","text":"146"},"Update the dependencies array to be: [fetchCards]",{"range":"148","text":"149"},{"range":"150","text":"146"},"Update the dependencies array to be: [setState, state]",{"range":"151","text":"152"},"removeEscape",{"range":"153","text":"154"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"155","text":"156"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"157","text":"154"},{"range":"158","text":"156"},[806,841],"[state, setState]",[1185,1221],[1411,1449],"[fetchCards]",[2875,2913],[1933,1935],"[setState, state]",[2676,2677],"",[2676,2676],"\\",[2922,2923],[2922,2922]]