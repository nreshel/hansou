[{"/mnt/c/Users/rod17/Documents/hansou/src/index.js":"1","/mnt/c/Users/rod17/Documents/hansou/src/reportWebVitals.js":"2","/mnt/c/Users/rod17/Documents/hansou/src/App.js":"3","/mnt/c/Users/rod17/Documents/hansou/src/context/GlobalState.js":"4","/mnt/c/Users/rod17/Documents/hansou/src/component/AddFlashCard.js":"5","/mnt/c/Users/rod17/Documents/hansou/src/component/FlashCardList.js":"6","/mnt/c/Users/rod17/Documents/hansou/src/component/NavBar.js":"7","/mnt/c/Users/rod17/Documents/hansou/src/component/SearchFlashCards.js":"8","/mnt/c/Users/rod17/Documents/hansou/src/component/DictionarySearch.js":"9","/mnt/c/Users/rod17/Documents/hansou/src/db/Firebase.js":"10","/mnt/c/Users/rod17/Documents/hansou/src/component/FlashCard.js":"11","/mnt/c/Users/rod17/Documents/hansou/src/hooks/useFetch.js":"12"},{"size":500,"mtime":1609025229938,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1609025229941,"results":"15","hashOfConfig":"14"},{"size":1035,"mtime":1609256178745,"results":"16","hashOfConfig":"14"},{"size":440,"mtime":1609025229896,"results":"17","hashOfConfig":"14"},{"size":2804,"mtime":1609126393271,"results":"18","hashOfConfig":"14"},{"size":3967,"mtime":1609264620553,"results":"19","hashOfConfig":"14"},{"size":3164,"mtime":1609256178754,"results":"20","hashOfConfig":"14"},{"size":3608,"mtime":1609256178757,"results":"21","hashOfConfig":"14"},{"size":3277,"mtime":1609256178747,"results":"22","hashOfConfig":"14"},{"size":521,"mtime":1609025229932,"results":"23","hashOfConfig":"14"},{"size":2655,"mtime":1609266185498,"results":"24","hashOfConfig":"14"},{"size":1934,"mtime":1609262424725,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"9tkzmg",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"28"},"/mnt/c/Users/rod17/Documents/hansou/src/index.js",[],["58","59"],"/mnt/c/Users/rod17/Documents/hansou/src/reportWebVitals.js",[],"/mnt/c/Users/rod17/Documents/hansou/src/App.js",["60","61","62"],"import React, { useContext } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { GlobalContext, GlobalProvider } from './context/GlobalState';\nimport NavBar from './component/NavBar'\nimport FlashCardList from './component/FlashCardList'\nimport AddFlashCard from './component/AddFlashCard'\nimport SearchFlashCards from './component/SearchFlashCards'\nimport DictionarySearch from './component/DictionarySearch'\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Router>\n        <NavBar />\n        <Switch>\n          <Route exact path=\"/\" render={(...props) => <FlashCardList />} />\n          <Route exact path=\"/add-card\" render={(...props) => <AddFlashCard />} />\n          <Route exact path=\"/search-card\" render={(...props) => <SearchFlashCards />} />\n          <Route exact path=\"/dictionary-search\" render={(...props) => <DictionarySearch />} />\n        </Switch>\n      </Router>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","/mnt/c/Users/rod17/Documents/hansou/src/context/GlobalState.js",["63"],"import React, { createContext, useState } from 'react'\nimport { app } from '../db/Firebase'\n\nconst initialState = {\n  cards: [],\n  cardsDone: [],\n  card: {},\n  index: 0\n}\n\nexport const GlobalContext = createContext();\n\nexport const GlobalProvider = ({ children }) => {\n  const [state, setState] = useState(initialState);\n  return (\n    <GlobalContext.Provider value={{state, setState}}>\n      {children}\n    </GlobalContext.Provider>\n  );\n}","/mnt/c/Users/rod17/Documents/hansou/src/component/AddFlashCard.js",["64","65","66"],"import React, { useState, useContext } from 'react';\nimport { GlobalContext, GlobalProvider } from '../context/GlobalState';\nimport { useLocation } from \"react-router-dom\";\nimport { GrRotateRight } from 'react-icons/gr';\nimport { app } from '../db/Firebase';\nimport '../css/AddCard.css';\nimport '../css/FlashCards.css';\nfunction AddFlashCard() {\n  const { state, setState } = useContext(GlobalContext);\n  const [card, setCard] = useState({\n    eng: '',\n    pin: '',\n    han: ''\n  })\n  const [flip, setFlip] = useState(false)\n  let location = useLocation();\n  console.log(state)\n\n  const onChange = (e) => {\n    setCard({\n      ...card,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  /**\n   * Submits inputted text boxes and makes it into a cards and adds it to the learning database\n   */\n  const onSubmit = (e) => {\n    e.preventDefault();\n    app.database().ref(`/users/CaIqDM8rMUgjpiqPEqGV1MzVN9S2/cards/`).push().set({eng: card.eng, pin: card.pin, han: card.han, done: 0});\n    setCard({\n      ...card, \n      eng: '',\n      pin: '',\n      han: ''\n    });\n  }\n\n  /**\n   * When chinese word is click converts text to speech output\n   */\n  const textToSpeech = (word) => {\n    if (!window.speechSynthesis) {\n      alert('Your browser doesn\\'t support text to speech.\\nTry Chrome 33+ :)');\n    } else {\n      const utterance = new SpeechSynthesisUtterance();\n\n      utterance.text = word;\n      utterance.lang = \"zh\";\n\n      speechSynthesis.speak(utterance);\n    }\n  }\n  return (\n    <div className=\"add-card-container\">\n      <div className=\"card-container\">\n        <div className={`card ${flip ? \"card-toggle\" : ''}`}>\n          <div className=\"front\">\n            <div className=\"rotation-btn\">\n              <GrRotateRight onClick={() => setFlip(!flip)} />\n            </div>\n            <div className=\"eng\">{card.eng}</div>\n          </div>\n          <div className=\"back\">\n            <div className=\"rotation-btn\">\n              <GrRotateRight onClick={() => setFlip(!flip)} />\n            </div>\n            <div className=\"han\" onClick={() => textToSpeech(card.han)}>{card.han}</div>\n            <div className=\"pin\">{card.pin}</div>\n          </div>\n        </div>\n      </div>\n      <div className=\"form-div\">\n        <form onSubmit={onSubmit}>\n          <input type=\"text\" name=\"eng\" autocomplete=\"off\" placeholder=\"input english...\" value={card.eng} onChange={onChange}/><br/>\n          <input type=\"text\" name=\"pin\" autocomplete=\"off\" placeholder=\"input pinyin...\" value={card.pin} onChange={onChange}/><br/>\n          <input type=\"text\" name=\"han\" autocomplete=\"off\" placeholder=\"input hanzi...\" value={card.han} onChange={onChange}/><br/>\n          <input type=\"submit\" value=\"submit\" className=\"btn\" />\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default AddFlashCard;\n","/mnt/c/Users/rod17/Documents/hansou/src/component/FlashCardList.js",["67","68","69","70","71","72","73","74"],"import React, { memo, useCallback, useEffect, useContext } from 'react'\nimport { useLocation } from \"react-router-dom\";\nimport { GlobalContext, GlobalProvider } from '../context/GlobalState'\nimport { useFetch } from '../hooks/useFetch'\nimport { app } from '../db/Firebase'\nimport FlashCard from './FlashCard'\nimport '../css/FlashCards.css'\nfunction FlashCardList() {\n  const { state, setState } = useContext(GlobalContext)\n  useFetch();\n  console.log(Object.values(state.cards))\n  const nextCard = useCallback(() => {\n    if(state.cards[state.index + 1] !== undefined ) {\n      setState({\n        ...state,\n        card: state.cards[state.index + 1],\n        index: state.index + 1\n      })\n    } else {\n      setState({\n        ...state,\n        card: state.cards[0],\n        index: 0\n      })\n    }\n  }, [state.card, state.index, setState])\n\n  const prevCard = useCallback(() => {\n    if(state.index > 0) {\n      setState({\n        ...state,\n        card: state.cards[state.index - 1],\n        index: state.index - 1\n      })\n    } else {\n      setState({\n        ...state,\n        card: state.cards[state.cards.length - 1],\n        index: state.cards.length - 1\n      })\n    }\n  }, [state.cards, state.index, setState])\n\n  const removeCard = useCallback((card) => {\n    console.log(card.id)\n    app.database().ref(`/users/CaIqDM8rMUgjpiqPEqGV1MzVN9S2/cards/`).child(card.id).remove();\n    fetchCards();\n  }, [state.cards, state.card, state.index])\n\n  const fetchCards = () => {\n    let cardList = []\n    app.database().ref(`/users/CaIqDM8rMUgjpiqPEqGV1MzVN9S2/cards/`).on('child_added', snap => {\n      cardList.push({\n        id: snap.key,\n        eng: snap.val().eng,\n        han: snap.val().han,\n        pin: snap.val().pin,\n        done: snap.val().done,\n        date: snap.val().date\n      })\n      setState({\n        ...state,\n        cards: cardList,\n        card: state.cards[state.index - 1],\n        index: state.index - 1\n      })\n    })\n  }\n\n  const cardLearned = useCallback((card) => {\n      var day = new Date();\n      console.log(day);\n\n      var nextDay = new Date(day);\n      const tomorrow = nextDay.setDate(day.getDate() + (card.done ? card.done + 1 : 1));\n      console.log(card, tomorrow);\n      app.database().ref(`/users/CaIqDM8rMUgjpiqPEqGV1MzVN9S2/cards-learned/`).child(card.id).push()\n      app.database().ref(`/users/CaIqDM8rMUgjpiqPEqGV1MzVN9S2/cards-learned/`).child(card.id).set({\n        id: card.id,\n        eng: card.eng,\n        pin: card.pin,\n        han: card.han,\n        done: card.done ? card.done + 1 : 1,\n        date: tomorrow\n      });\n      app.database().ref(`/users/CaIqDM8rMUgjpiqPEqGV1MzVN9S2/cards/`).child(card.id).remove();\n      let newList = state.cards.filter(cardValue => cardValue !== card)\n      setState({\n        ...state,\n        cards: newList,\n        card: newList[1],\n        index: 1\n      });\n    },\n    [state.cards, state.card, state.index],\n  )\n\n  const forgotCard = useCallback(\n    (card) => {\n      app.database().ref(`/users/CaIqDM8rMUgjpiqPEqGV1MzVN9S2/cards/`).child(card.id).set({\n        id: card.id,\n        eng: card.eng,\n        pin: card.pin,\n        han: card.han,\n        done: 0,\n        date: 0\n      })\n      let newList = state.cards.filter(cardValue => {\n        if(cardValue === card) {\n          cardValue['done'] = 0\n          cardValue['date'] = 0\n        }\n        return cardValue\n      })\n      setState({\n        ...state,\n        cards: newList,\n        card: state.cards[state.index],\n        index: state.index\n      })\n    },\n    [state.cards, state.card, state.index],\n  )\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h1 class=\"title\">Flashcard app</h1>\n        {state && state.cards && state.cardsDone && <FlashCard card={state.card} nextCard={nextCard} prevCard={prevCard} removeCard={removeCard} cardLearned={cardLearned} forgotCard={forgotCard} />}\n      </div>\n    </div>\n    \n  )\n}\n\nexport default memo(FlashCardList);\n","/mnt/c/Users/rod17/Documents/hansou/src/component/NavBar.js",["75","76","77","78"],"import React, { useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { GlobalContext } from '../context/GlobalState';\nimport { app } from '../db/Firebase'\nimport { AiFillHome } from 'react-icons/ai'\nimport { MdKeyboardArrowLeft } from 'react-icons/md'\nimport { AiOutlineSearch, AiOutlinePlus, AiOutlineFileSearch } from 'react-icons/ai'\nimport { GiHamburgerMenu } from 'react-icons/gi'\nimport { CgLogOut } from 'react-icons/cg'\nimport '../css/NavBar.css'\n\nfunction NavBar() {\n  let history = useHistory();\n  const { state } = useContext(GlobalContext)\n  const [isOpen, setIsOpen] = useState(false);\n  console.log(\"this is coming from the navbar\", state)\n  // const isEmpty = !Object.values(state).some(x => (x !== null && x !== '' && x !== [] && x !== {}));\n  return (\n    <React.Fragment>\n      {isOpen ? (\n        <div className={`sidebar`} >\n          <a onClick={() => history.push({\n            pathname: '/',\n            state: {\n              cards: state.cards,\n              cardsDone: state.cardsDone,\n              cardSearch: [...state.cards, ...state.cardsDone],\n              card: state.card,\n              index: state.index\n            }\n          })}>\n            <AiFillHome /> <span>Home</span>\n          </a>\n          <a onClick={() => history.push({\n            pathname: '/search-card',\n            state: {\n              cards: state.cards,\n              cardsDone: state.cardsDone,\n              cardSearch: [...state.cards, ...state.cardsDone],\n              card: state.card,\n              index: state.index\n            }\n          })}>\n            <AiOutlineSearch /> <span>Search Card</span>\n          </a>\n          <a onClick={() => history.push({\n            pathname: '/add-card',\n            state: {\n              cards: state.cards,\n              cardsDone: state.cardsDone,\n              cardSearch: [...state.cards, ...state.cardsDone],\n              card: state.card,\n              index: state.index\n            }\n          })}>\n            <AiOutlinePlus /> <span>Add Card</span>\n          </a>\n          <a onClick={() => history.push({\n            pathname: '/dictionary-search',\n            state: {\n              cards: state.cards,\n              cardsDone: state.cardsDone,\n              cardSearch: [...state.cards, ...state.cardsDone],\n              card: state.card,\n              index: state.index\n            }\n          })}>\n            <AiOutlineFileSearch /> <span>Dictionary Search</span>\n          </a>\n          <div className=\"arrow-toggle\" onClick={() => setIsOpen(!isOpen)}>\n            <MdKeyboardArrowLeft />\n          </div>\n          <a className=\"sign-out\" href=\"/\" onClick={() => app.auth().signOut()\n          .then(() => {\n            alert(\"User has signed out successfully\")\n          })\n          .catch((error) => {\n            alert(error)\n          })}>\n            <CgLogOut className=\"sign-out-icon\"/> <span>Sign Out</span>\n          </a>\n        </div>\n      ) : (\n        <div className=\"hamburger-nav\" onClick={() => setIsOpen(!isOpen)}>\n          <GiHamburgerMenu />\n        </div>\n      )}\n\n    </React.Fragment>\n  )\n}\n\nexport default NavBar;","/mnt/c/Users/rod17/Documents/hansou/src/component/SearchFlashCards.js",[],"/mnt/c/Users/rod17/Documents/hansou/src/component/DictionarySearch.js",["79","80","81"],"import React, { memo, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { app } from '../db/Firebase'\nimport { GoPlus } from 'react-icons/go'\nimport '../css/DictionarySearch.css'\n\nfunction DictionarySearch() {\n  const [searchValue, setSearchValue] = useState('')\n  const [searchedList, setSearchedList] = useState([])\n  const { state } = useLocation()\n  console.log(searchedList)\n\n  const getFilteredDictionary = (e) => {\n    let fetchCards = []\n    const keycode = (e.keyCode ? e.keyCode : e.which)\n    if(searchValue.match(/(\\p{Script=Hani})+/gu) && keycode === 13){\n      console.log('enter press here! ')\n      app.database().ref('/chinese-dictionary-simplified/').orderByKey().startAt(searchValue).endAt(searchValue +\"\\uf8ff\").once('value', (snapshot) => {\n        if(snapshot.exists()) {\n          Object.entries(snapshot.val()).forEach(([key, value]) => {\n            fetchCards.push({\n              id: key,\n              description: value.description,\n              jyut: value.jyutping,\n              pin: value.pinyin,\n              char: value.word\n            })\n          })\n          setSearchedList(fetchCards)\n        } else {\n          alert(\"This query does not match what's in the dictionary, please try again with a different query\")\n          setSearchValue('')\n        }\n      })\n    }\n  }\n  \n  /**\n   * adds cards to the flashcard deck\n   */\n  const addCard = (card) => {\n    app.database().ref(`/users/CaIqDM8rMUgjpiqPEqGV1MzVN9S2/cards/`).push().set(card);\n    alert(\"card has been added\")\n  }\n\n  /**\n   * When chinese word is click converts text to speech output\n   */\n  const textToSpeech = (word) => {\n    if (!window.speechSynthesis) {\n      alert('Your browser doesn\\'t support text to speech.\\nTry Chrome 33+ :)');\n    } else {\n      const utterance = new SpeechSynthesisUtterance();\n\n      utterance.text = word;\n      utterance.lang = \"zh\";\n\n      speechSynthesis.speak(utterance);\n    }\n  }\n  return (\n    <div className=\"intial-container\">\n      <input className=\"search-box\" name=\"search\" type=\"text\" placeholder=\"search card in chinese...\" value={searchValue} onChange={(e) => setSearchValue(e.target.value)} onKeyPress={(e) => getFilteredDictionary(e)} autocomplete=\"off\" />\n      <div className=\"dictionary-search-container\">\n        {searchValue.match(/(\\p{Script=Hani})+/gu) && searchedList && searchedList.length !== 0 ? searchedList.map(card => {\n          return (\n            <div className=\"dictionary-card-search-container\">\n              <div className=\"dictionary-search-card\">\n                <div className=\"add-card\" onClick={() => addCard({eng: card.description[0], pin: card.pin[0].replace(/[\\[\\]']+/g,''), han: card.id})} >\n                  <GoPlus />\n                </div>\n                <div className=\"eng-dictionary-search\">{card.description[0]}</div>\n                <div className=\"pin-dictionary-search\">{card.pin[0].replace(/[\\[\\]']+/g,'')}</div>\n                <div className=\"han-dictionary-search\" onClick={() => textToSpeech(card.id)} >{card.id}</div>\n              </div>\n            </div>\n          )\n        }) : (\n          <div className=\"initial-container\">Try to search for a word!</div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default memo(DictionarySearch)\n","/mnt/c/Users/rod17/Documents/hansou/src/db/Firebase.js",[],"/mnt/c/Users/rod17/Documents/hansou/src/component/FlashCard.js",["82"],"/mnt/c/Users/rod17/Documents/hansou/src/hooks/useFetch.js",["83"],"import { useMemo, useContext } from 'react'\nimport { GlobalContext } from '../context/GlobalState'\nimport { app } from '../db/Firebase'\n\nexport function useFetch() {\n  const { state, setState } = useContext(GlobalContext)\n  useMemo(() => {\n    let dbCards = [];\n    let dbCardsDone = []\n    let dbCard = {}\n    app.database().ref(`/users/CaIqDM8rMUgjpiqPEqGV1MzVN9S2/cards/`).on('child_added', snap => {\n      if(snap.exists()) {\n        dbCards.push({\n          id: snap.key,\n          eng: snap.val().eng,\n          han: snap.val().han,\n          pin: snap.val().pin,\n          done: snap.val().done\n        })\n      }\n    })\n\n    app.database().ref(`/users/CaIqDM8rMUgjpiqPEqGV1MzVN9S2/cards-learned/`).on('child_added', snap => {\n      if((snap.val().date - Date.parse(new Date())) < 0) {\n        app.database().ref(`/users/CaIqDM8rMUgjpiqPEqGV1MzVN9S2/cards-learned/`).child(snap.key).remove(); // removes from the learned database \n        app.database().ref(`/users/CaIqDM8rMUgjpiqPEqGV1MzVN9S2/cards/`).push().set({ // pushes card to the learning database\n          id: snap.key,\n          eng: snap.val().eng,\n          han: snap.val().han,\n          pin: snap.val().pin,\n          done: snap.val().done\n        })\n      }\n    })\n\n    app.database().ref(`/users/CaIqDM8rMUgjpiqPEqGV1MzVN9S2/cards/`).orderByKey().limitToFirst(1).on('child_added', snap => {\n      if(snap.exists()) {\n        dbCard = snap.val()\n      }\n    })\n    \n    app.database().ref(`/users/CaIqDM8rMUgjpiqPEqGV1MzVN9S2/cards-learned/`).on('child_added', snap => {\n      dbCardsDone.push({\n        key: snap.key,\n        id: snap.val().id,\n        eng: snap.val().eng,\n        han: snap.val().han,\n        pin: snap.val().pin,\n        done: snap.val().done,\n        date: snap.val().date\n      })\n      setState({\n        ...state,\n        cards: dbCards,\n        cardsDone: dbCardsDone,\n        card: dbCard,\n        index: 0\n      })\n    })\n\n  }, [])\n}",{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":27},{"ruleId":"88","severity":1,"message":"92","line":3,"column":10,"nodeType":"90","messageId":"91","endLine":3,"endColumn":23},{"ruleId":"88","severity":1,"message":"93","line":9,"column":8,"nodeType":"90","messageId":"91","endLine":9,"endColumn":12},{"ruleId":"88","severity":1,"message":"94","line":2,"column":10,"nodeType":"90","messageId":"91","endLine":2,"endColumn":13},{"ruleId":"88","severity":1,"message":"95","line":2,"column":25,"nodeType":"90","messageId":"91","endLine":2,"endColumn":39},{"ruleId":"88","severity":1,"message":"96","line":9,"column":18,"nodeType":"90","messageId":"91","endLine":9,"endColumn":26},{"ruleId":"88","severity":1,"message":"97","line":16,"column":7,"nodeType":"90","messageId":"91","endLine":16,"endColumn":15},{"ruleId":"88","severity":1,"message":"98","line":1,"column":36,"nodeType":"90","messageId":"91","endLine":1,"endColumn":45},{"ruleId":"88","severity":1,"message":"99","line":2,"column":10,"nodeType":"90","messageId":"91","endLine":2,"endColumn":21},{"ruleId":"88","severity":1,"message":"95","line":3,"column":25,"nodeType":"90","messageId":"91","endLine":3,"endColumn":39},{"ruleId":"100","severity":1,"message":"101","line":26,"column":6,"nodeType":"102","endLine":26,"endColumn":41,"suggestions":"103"},{"ruleId":"100","severity":1,"message":"101","line":42,"column":6,"nodeType":"102","endLine":42,"endColumn":42,"suggestions":"104"},{"ruleId":"100","severity":1,"message":"105","line":48,"column":6,"nodeType":"102","endLine":48,"endColumn":44,"suggestions":"106"},{"ruleId":"100","severity":1,"message":"107","line":95,"column":5,"nodeType":"102","endLine":95,"endColumn":43,"suggestions":"108"},{"ruleId":"100","severity":1,"message":"107","line":122,"column":5,"nodeType":"102","endLine":122,"endColumn":43,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":22,"column":11,"nodeType":"112","endLine":31,"endColumn":15},{"ruleId":"110","severity":1,"message":"111","line":34,"column":11,"nodeType":"112","endLine":43,"endColumn":15},{"ruleId":"110","severity":1,"message":"111","line":46,"column":11,"nodeType":"112","endLine":55,"endColumn":15},{"ruleId":"110","severity":1,"message":"111","line":58,"column":11,"nodeType":"112","endLine":67,"endColumn":15},{"ruleId":"88","severity":1,"message":"113","line":10,"column":11,"nodeType":"90","messageId":"91","endLine":10,"endColumn":16},{"ruleId":"114","severity":1,"message":"115","line":69,"column":120,"nodeType":"116","messageId":"117","endLine":69,"endColumn":121,"suggestions":"118"},{"ruleId":"114","severity":1,"message":"115","line":73,"column":79,"nodeType":"116","messageId":"117","endLine":73,"endColumn":80,"suggestions":"119"},{"ruleId":"88","severity":1,"message":"96","line":9,"column":18,"nodeType":"90","messageId":"91","endLine":9,"endColumn":26},{"ruleId":"100","severity":1,"message":"120","line":61,"column":6,"nodeType":"102","endLine":61,"endColumn":8,"suggestions":"121"},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'GlobalContext' is defined but never used.","'logo' is defined but never used.","'app' is defined but never used.","'GlobalProvider' is defined but never used.","'setState' is assigned a value but never used.","'location' is assigned a value but never used.","'useEffect' is defined but never used.","'useLocation' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'state'. Either include it or remove the dependency array.","ArrayExpression",["124"],["125"],"React Hook useCallback has a missing dependency: 'fetchCards'. Either include it or remove the dependency array.",["126"],"React Hook useCallback has missing dependencies: 'setState' and 'state'. Either include them or remove the dependency array.",["127"],["128"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'state' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["129","130"],["131","132"],"React Hook useMemo has missing dependencies: 'setState' and 'state'. Either include them or remove the dependency array.",["133"],"no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},{"desc":"134","fix":"136"},{"desc":"137","fix":"138"},{"desc":"134","fix":"139"},{"desc":"134","fix":"140"},{"messageId":"141","fix":"142","desc":"143"},{"messageId":"144","fix":"145","desc":"146"},{"messageId":"141","fix":"147","desc":"143"},{"messageId":"144","fix":"148","desc":"146"},{"desc":"149","fix":"150"},"Update the dependencies array to be: [state, setState]",{"range":"151","text":"152"},{"range":"153","text":"152"},"Update the dependencies array to be: [fetchCards]",{"range":"154","text":"155"},{"range":"156","text":"152"},{"range":"157","text":"152"},"removeEscape",{"range":"158","text":"159"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"160","text":"161"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"162","text":"159"},{"range":"163","text":"161"},"Update the dependencies array to be: [setState, state]",{"range":"164","text":"165"},[806,841],"[state, setState]",[1185,1221],[1411,1449],"[fetchCards]",[2875,2913],[3535,3573],[2676,2677],"",[2676,2676],"\\",[2922,2923],[2922,2922],[1929,1931],"[setState, state]"]